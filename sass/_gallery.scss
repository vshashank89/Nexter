.gallery {
    background-color: $color-grey-light-1;
    grid-column: full-start/full-end;

    // We're gonna create a 8-columns and 7rows grid.
    display: grid;
    grid-template-columns: repeat(8,1fr);
    grid-template-rows: repeat(7 , 5vw); /*We set the height of each in % of viewport width(i.e 5vw means 5% of vw) , 
    so that the grid doesnt turn weird and maintains its grid structure (i.e each of the grid cell maintains its aspect ratio), 
    when we resize the window. */ 

    grid-gap: 1.5rem;
    padding: 1.5rem; // We give the same padding as grid-gap so the gallery looks equally spaced on all sides. 
    

    /*Here we use <figure> element ,as a parent to the image, and it becomes the grid item. So we are having an image filling  
    the parent container( here <figure> element) by setting object-fit to cover. */ 
    &__item {


        &--1{
            grid-column: 1/span 2;
            grid-row: 1/span 2;
        }

        &--2{
            grid-column: 3/span 3;
            grid-row: 1/span 3;
        }

        &--3{
            grid-column: 6/7;
            grid-row: 1/span 2;
        }

        &--4{
            grid-column: 7/span 2;
            grid-row: 1/span 2;
        }

        &--5{
            grid-column: 1/span 2;
            grid-row: 3/span 3;
        }

        &--6{
            grid-column: 3/span 2;
            grid-row: 4/span 2;
        }

        &--7{
            grid-column: 5/6;
            grid-row: 4/5;
        }

        &--8{
            grid-column: 6/span 2;
            grid-row: 3/span 2;
        }

        &--9{
            grid-column: 8/span 1;
            grid-row: 3/span 3;
        }

        &--10 {
            grid-column: 1/2;
            grid-row: 6/8;
        }

        &--11 {
            grid-column: 2/span 2;
            grid-row: 6/8;
        }

        &--12 {
            grid-column: 4/5;
            grid-row: 6/8;
        }

        &--13 {
            grid-column: 5/span 3;
            grid-row: 5/span 3;
        }

        &--14 {
            grid-column: 8/9;
            grid-row: 6/span 2;
        }

    }

    &__img {
       width: 100%;

       height: 100%; // object-fit works only if we set both height and width for the element.

       object-fit: cover; /* So this doesnt affect the aspect-ratio of the image and occupies entire grid-area that we specify.
       similar to setting background-size to cover .*/
       
       display: block; // Otherwise we have small,white gap after the image as it is treated as inline element like text. 
    }
}