.homes {
    //background-color: $color-secondary;
    grid-column: center-start/center-end;
    margin: 15rem 0;

    display: grid;
    grid-template-columns: repeat(auto-fit , minmax(25rem,1fr) ); // This is responsive method.
    grid-gap: 7rem; // 70px.
}

.home {
    background-color: $color-grey-light-1;


    display: grid;
    grid-template-columns: repeat(2,1fr);
    grid-row-gap: 3.5rem;


    &__img {
        width: 100%;
        grid-row: 1/2;
        grid-column: 1/-1;
        z-index: 1;
    }

    &__like {
        fill: $color-primary;
        height: 2.5rem;
        width: 2.5rem;

        grid-row: 1/2;
        grid-column: 2/3;
        z-index: 2;
        justify-self: end; // to align grid item inside grid cell along horizontal row-axis.
        margin: 1rem;  
    }

    &__name {
        grid-column: 1/-1;
        width: 80%;
        justify-self: center;
        grid-row: 1/2;
        align-self: end;
        z-index: 3;
        transform: translateY(50%);

        /*transform: translateY(-50%);  // We dont prefer this because the row will be half empty.  
        z-index: 5;*/

        font-family: $font-display;
        font-size: 1.6rem;
        font-weight: 400;
        padding: 1.25rem;
        background-color: $color-secondary;
        text-align: center;
        color: #fff;
    }

    &__location , &__rooms {
        margin-top: 2.5rem;
    } 

    &__location , &__rooms ,
    &__area , &__price {

        font-size: 1.5rem; // this is for the paragraph.
        margin-left: 2rem;
        display: flex;
        align-items: center;// to center the flex-items along cross-axis (i.e vertical) 

        svg {
            height: 2rem;
            width: 2rem;
            fill: $color-primary;
            margin-right: 1rem; // to give a space b/w svg icon and <p> because flexbox doesnt provide gap, like grid does. 
        }

    }

    &__btn {
        grid-column: 1/-1;
    }
}