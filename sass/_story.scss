.story {
    &__pictures {
        background-color: $color-primary;
        grid-column: full-start/col-end 4;

        background-image: linear-gradient(rgba($color-primary,.5) ,rgba($color-primary,.5)) ,
                          url(../img/back.jpg);
        background-size: cover;                  

        display: grid; // Here we create a 6-by-6 grid to center the image.
        grid-template-rows: repeat(6,1fr);
        grid-template-columns: repeat(6,1fr);
        align-items: center; // To center the image along column-axis.


        @media only screen and (max-width: $bp-medium) {
            grid-column: full-start/full-end;
            padding: 6rem;
        }

    }

    &__img--1 {
        width: 100%;
        grid-row: 2/6;
        grid-column: 2/6; // The image doesnt fit the grid area because it has an aspect ratio and maintains it,so doesnt expand as we say.
        box-shadow: 0 2rem 5rem rgba(#000 ,.1);

        @media only screen and (max-width: $bp-medium) {
            grid-column: 1/5;
            grid-row: 1 / -1;
            
        }
    }

    &__img-2 {
        width: 115%;
        grid-row: 4/6;
        grid-column: 4/7;
        z-index: 20;
        box-shadow: 0 2rem 5rem rgba(#000 ,.2);

        @media only screen and (max-width: $bp-medium) {
            grid-row: 1 / -1;
            width: 100%;
        }

    }

    &__content {
        background-color: $color-grey-light-1;
        grid-column: col-start 5/ full-end;

        padding: 6rem 8vw; // The padding on sides in rem is not suitable so we define in viewport-width which is perfect as we resize the page.

        /* Since the story__content is a 1-dimensional layout ,we can use flexbox here to center the content. So in modern CSS , we use CSS GRID 
        together with flexbox.*/ 

        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: flex-start;

        // Responsive Media query
        @media only screen and (max-width: $bp-medium) {
            grid-column: full-start/full-end;
            grid-row: 5 / 6; // We want the content on top of story__pictures section. 
        }




        // to remove the flex items to stretch(default) along cross axis.

        /* Center the story__content using Css Grid 
        display: grid;
        align-content: center; // align-content prop is used to align all our grid tracks in vertical direction.
        justify-items: start; */
        
    }

    &__text {
        font-size: 1.4rem;
        font-style: italic;
        margin-bottom: 4rem;
    }
}