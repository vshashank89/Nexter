// COLOR VARIABLES
$color-primary: #c69963;
$color-primary-dark: #B28451;

$color-secondary: #101d2c;

$color-grey-light-1: #f9f7f6;
$color-grey-light-2: #aaa;

$color-grey-dark-1: #54483A;
$color-grey-dark-2: #6D5D4B;

// FONT VARIABLES
$font-primary: 'Nunito' , san-serif;
$font-display: 'Josefin Sans' , san-serif;


// RESPONSIVE BREAKPOINTS
$bp-largest: 75em; // i.e 1200px/16px 1em= 16px in browser.
$bp-large : 62.5em; // i.e 1000px.
$bp-medium: 50em; // i.e 800px.
$bp-small: 37.5em; // i.e 600px.


*,
*::after,
*::before {
    margin: 0;
    padding: 0;
    box-sizing: inherit;
}

html {
    box-sizing: border-box;
    font-size: 62.5%; // i.e. 1rem=10px firefox browser default is 16px so , 10px/16px = 62.5% .


    @media only screen and (max-width: $bp-largest) {
        font-size: 50%; // i.e 8px
    }
}

body {
    font-family: $font-primary;
    color: $color-grey-dark-2;
    font-weight: 300;
    line-height: 1.6; 
}

.container {
    display: grid;
    grid-template-rows: 80vh min-content 40vw repeat(3, min-content);

    // Naming Column tracks
    grid-template-columns: [sidebar-start] 80px [sidebar-end full-start] minmax(6rem ,1fr) 
                           [center-start] repeat(8 , [col-start] minmax(min-content , 14rem) [col-end]) [center-end] minmax(6rem ,1fr) [full-end]; 

    /* [col-start] [col-end] this creates a named set of grid lines i.e col-start 1 ..... col-end 8 .
     Here 1140px/8(i.e column count) = 140px i.e 14rem.
    To center the 8-col layout b/w sidebar and viewportend , we add 2 cols.*/

    // To change the sidebar to the top row for responsive .
    @media only screen and (max-width: $bp-large) {
        grid-template-rows: 6rem 80vh min-content 40vw repeat(3, min-content); // 6rem for the sidebar on top.
        grid-template-columns:[full-start] minmax(6rem ,1fr) 
                        [center-start] repeat(8 , [col-start] minmax(min-content , 14rem) [col-end]) [center-end] minmax(6rem ,1fr) [full-end];
    }


    @media only screen and (max-width: $bp-medium) { 
        //grid-template-rows: 6rem calc(100vh - 6rem) min-content min-content min-content min-content repeat(3, min-content); or
        grid-template-rows: 6rem calc(100vh - 6rem);
        /* At this media query we want only 2 rows defined specific width  for sidebar and header , 
        and all other rows defined on the content , so we can put min-content on other rows or just leave that for the css grid to 
        automatically implicit grids. */
    }

}